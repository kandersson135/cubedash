var myGamePiece;var myObstacles = [];function startGame() {	myGamePiece = new component(30, 30, "white", 10, 120);	myGameArea.start();}function modalPopup() {	var modal = document.getElementById('cd-modal');	modal.style.display = "block";}function delayModal(mileSeconds) {	window.setTimeout(modalPopup, mileSeconds);}function displayCountdown() {	var countdownNumberEl = document.getElementById('countdown-number');	var countdown = 3;		countdownNumberEl.textContent = countdown;				setInterval(function() {	  countdown = --countdown <= 0 ? 3 : countdown;		  countdownNumberEl.textContent = countdown;	}, 1000);}var myGameArea = {	canvas : document.createElement("canvas"),	start : function() {		this.canvas.width = 480;		this.canvas.height = 480;		this.context = this.canvas.getContext("2d");		document.body.insertBefore(this.canvas, document.body.childNodes[0]);		this.frameNo = 0;		this.interval = setInterval(updateGameArea, 4);		},	clear : function() {		this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);	},	stop : function() {		clearInterval(this.interval);	}};function component(width, height, color, x, y) {	this.width = width;	this.height = height;	this.speedX = 0;	this.speedY = 0;	this.x = x;	this.y = y;	this.update = function() {		ctx = myGameArea.context;		ctx.fillStyle = color;		ctx.fillRect(this.x, this.y, this.width, this.height);	};	this.newPos = function() {		this.x += this.speedX;		this.y += this.speedY;	};	this.crashWith = function(otherobj) {		var myleft = this.x;		var myright = this.x + (this.width);		var mytop = this.y;		var mybottom = this.y + (this.height);		var otherleft = otherobj.x;		var otherright = otherobj.x + (otherobj.width);		var othertop = otherobj.y;		var otherbottom = otherobj.y + (otherobj.height);		var crash = true;		if ((mybottom < othertop) || (mytop > otherbottom) || (myright < otherleft) || (myleft > otherright)) {			crash = false;		}		return crash;	};}function updateGameArea() {	var x, height, gap, minHeight, maxHeight, minGap, maxGap;	var colours = ['#ff509e', '#95d13c', '#00b6cb', '#9753e1'];	//var colours = ['#FF0092', '#FFCA1B', '#B6FF00', '#228DFF', '#BA01FF'];	var rand = colours[Math.floor(Math.random() * colours.length)];		var music = document.getElementById("audioplayer");	var countdown = document.getElementById("countdown");	var counter = document.getElementById("counter");	var total = document.getElementById("total");	var xx = counter.innerHTML;	for (i = 0; i < myObstacles.length; i += 1) {		if (myGamePiece.crashWith(myObstacles[i])) {			myGameArea.stop();			delayModal(3000);			music.pause();			navigator.vibrate(50);			//document.getElementById("countdown").style.display = "block";			countdown.style.display = "block";			displayCountdown();						counter.style.display = "none";			total.style.display = "block";    	total.innerHTML = xx;				return;		}	}	myGameArea.clear();	myGameArea.frameNo += 1;	if (myGameArea.frameNo == 1 || everyinterval(150)) {		x = myGameArea.canvas.width;		minHeight = 20;		maxHeight = 200;		height = Math.floor(Math.random()*(maxHeight-minHeight+1)+minHeight);		minGap = 150;		maxGap = 200;		gap = Math.floor(Math.random()*(maxGap-minGap+1)+minGap);		myObstacles.push(new component(10, height, rand, x, 0));		myObstacles.push(new component(10, x - height - gap, rand, x, height + gap));	}	for (i = 0; i < myObstacles.length; i += 1) {		myObstacles[i].x += -1;		myObstacles[i].update();	}	myGamePiece.newPos();	myGamePiece.update();}function everyinterval(n) {	if ((myGameArea.frameNo / n) % 1 === 0) {return true;}	return false;}function moveup() {	myGamePiece.speedY = -1;}function movedown() {	myGamePiece.speedY = 1;}function clearmove() {	myGamePiece.speedX = 0;	myGamePiece.speedY = 0;}document.onkeydown = checkKey;function checkKey(e) {    e = e || window.event;    if (e.keyCode == '38') {	    myGamePiece.speedY = -1;    }    else if (e.keyCode == '40') {    	myGamePiece.speedY = 1;    }}